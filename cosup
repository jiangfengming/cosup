#!/usr/bin/env node

const cosup = require('.')
const argv = require('yargs')
  .command('$0 [src] [dest]', 'Upload files in [src] directory or single file to [dest] directory on COS.', args => args
    .option('secret-id', {
      alias: 'u',
      describe: 'SecretId',
      demandOption: true
    })
    .option('secret-key', {
      alias: 'p',
      describe: 'SecretKey',
      demandOption: true
    })
    .option('region', {
      alias: 'r',
      describe: 'Region',
      demandOption: true
    })
    .option('bucket', {
      alias: 'b',
      describe: 'Bucket',
      demandOption: true
    })
    .positional('src', {
      describe: 'The source directory/file on your machine',
      demandOption: true
    })
    .positional('dest', {
      describe: 'The destination directory on COS',
      demandOption: true
    })
    .option('src', {
      hidden: true,
      demandOption: true
    })
    .option('dest', {
      hidden: true,
      demandOption: true
    })
    .check(argv => {
      if (/^[a-z]:\//i.test(argv.dest)) {
        throw `Invalid dest "${argv.dest}". You need to set the environment variable "MSYS_NO_PATHCONV=1" in Git Bash/MSYS2 on Windows.`
      }

      return true
    })
    .option('max-age', {
      alias: 'e',
      describe: 'Cache-Control: max-age header',
      type: 'array',
      nargs: 2
    })
    .default('max-age', ['*.html', 10, '*', 2592000], '-e "*.html" 10 -e "*" 2592000')
    .option('ignore', {
      alias: 'i',
      describe: 'Don\' upload the files which matches the glob pattern. e.g. -i "*.sh" -i ".gitignore"',
      type: 'array',
      nargs: 1
    })
    .option('parallel', {
      alias: 'n',
      describe: 'Parallel upload limit',
      type: 'number',
      default: 10
    })
    .option('log', {
      alias: 'l',
      describe: 'Output logs to console',
      type: 'boolean',
      default: true
    })
    .example('cosup -u xxx -p xxx -r ap-shanghai -b test-123456 dist /')
  )
  .env('COS')
  .config()
  .alias('config', 'c')
  .alias('version', 'v')
  .alias('help', 'h')
  .argv

cosup(argv).catch(e => {
  process.exitCode = 1
  console.error(e) // eslint-disable-line no-console
})
